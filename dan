---
# Source: streamsec-agent/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: streamsec-agent
  namespace: default
  labels:
    helm.sh/chart: streamsec-agent-1.1.42
    app.kubernetes.io/name: streamsec-agent
    app.kubernetes.io/instance: streamsec-agent
    app.kubernetes.io/version: "1.1.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: streamsec-agent/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: streamsec-agent
  namespace: default
type: Opaque
data:
  api-key: "TUlTU0lORw=="
---
# Source: streamsec-agent/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: streamsec-agent-cluster-role-sbom
  namespace: default
  labels:
    helm.sh/chart: streamsec-agent-1.1.42
    app.kubernetes.io/name: streamsec-agent
    app.kubernetes.io/instance: streamsec-agent
    app.kubernetes.io/version: "1.1.4"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - pods
      - replicationcontrollers
      - services
      - endpoints
      - namespaces
      - configmaps
      - nodes
      - persistentvolumes
      - persistentvolumeclaims
      - serviceaccounts
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - rbac
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - networkpolicies
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - metrics.k8s.io
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
---
# Source: streamsec-agent/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: streamsec-agent-cluster-role-sbom
  labels:
    helm.sh/chart: streamsec-agent-1.1.42
    app.kubernetes.io/name: streamsec-agent
    app.kubernetes.io/instance: streamsec-agent
    app.kubernetes.io/version: "1.1.4"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: streamsec-agent-cluster-role-sbom
subjects:
  - kind: ServiceAccount
    name: streamsec-agent
    namespace: default
---
# Source: streamsec-agent/templates/cluster_agent_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamsec-agent-cluster-agent
  namespace: default
  labels:
    helm.sh/chart: streamsec-agent-1.1.42
    app.kubernetes.io/name: streamsec-agent
    app.kubernetes.io/instance: streamsec-agent
    app.kubernetes.io/version: "1.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: streamsec-agent
      app.kubernetes.io/instance: streamsec-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: streamsec-agent
        app.kubernetes.io/instance: streamsec-agent
    spec:
      serviceAccountName: streamsec-agent
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      tolerations:
        - effect: NoSchedule
          key: re
          operator: Equal
          value: "true"
      containers:
        - name: krs
          image: public.ecr.aws/stream-security/cluster-agent:1.1.5@sha256:7f96909de021d67c03c5b65fc8454b47aabdd056e866f407a391fd19f7943d3c
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          imagePullPolicy: IfNotPresent
          command:
            - /usr/local/bin/python
            - main.py
            - krs
          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 1000m
              memory: 2048Mi
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
          readinessProbe:
            exec:
              command:
                - cat
                - /main.py
            initialDelaySeconds: 30
            periodSeconds: 30
          livenessProbe:
            exec:
              command:
                - cat
                - /main.py
            initialDelaySeconds: 30
            periodSeconds: 30
          env:
            - name: STREAMSEC_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "streamsec-agent"
                  key: api-key
            - name: STREAMSEC_API_URL
              value: 

            - name: ENABLE_POD_PROCESSES
              value: "false"

            - name: POD_PROCESSES_SERVICE
              value: streamsec-agent-process-discovery

            - name: POD_PROCESSES_PORT
              value: "8080"
            - name: HOME
              value: /tmp
            - name: FULL_SCAN_SCHEDULE_SECONDS
              value: "1800"

            - name: FILTER_RUNNING_PODS
              value: "true"

            - name: FIELD_SELECTORS_NAMESPACES
              value: 

            - name: FIELD_SELECTORS_NAMES
              value: 

            - name: IN_LABEL_SELECTOR
              value: 

            - name: EXISTS_LABEL_SELECTOR
              value: 

            - name: EQUALS_LABEL_SELECTOR
              value: 

            - name: WORKFLOW
              value: "full_scan"

            - name: PORT
              value: "443"
            - name: DEBUG
              value: "false"
            - name: LOGLEVEL
              value: "INFO"
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: docker-config
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
        - name: sbom
          image: public.ecr.aws/stream-security/cluster-agent:1.1.5@sha256:7f96909de021d67c03c5b65fc8454b47aabdd056e866f407a391fd19f7943d3c
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
            - mountPath: /tmp/.docker
              name: docker-config
              readOnly: true
          imagePullPolicy: IfNotPresent
          command:
            - /usr/local/bin/python
            - main.py
            - sbom
          resources:
            null
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
          readinessProbe:
            exec:
              command:
                - cat
                - /main.py
            initialDelaySeconds: 30
            periodSeconds: 30
          livenessProbe:
            exec:
              command:
                - cat
                - /main.py
            initialDelaySeconds: 30
            periodSeconds: 30
          env:
            - name: STREAMSEC_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "streamsec-agent"
                  key: api-key
            - name: STREAMSEC_API_URL
              value: 

            - name: ENABLE_POD_PROCESSES
              value: "false"

            - name: POD_PROCESSES_SERVICE
              value: streamsec-agent-process-discovery

            - name: POD_PROCESSES_PORT
              value: "8080"
            - name: HOME
              value: /tmp
            - name: FULL_SCAN_SCHEDULE_SECONDS
              value: "1800"

            - name: FILTER_RUNNING_PODS
              value: "true"

            - name: FIELD_SELECTORS_NAMESPACES
              value: 

            - name: FIELD_SELECTORS_NAMES
              value: 

            - name: IN_LABEL_SELECTOR
              value: 

            - name: EXISTS_LABEL_SELECTOR
              value: 

            - name: EQUALS_LABEL_SELECTOR
              value: 

            - name: WORKFLOW
              value: "full_scan"

            - name: PORT
              value: "443"
            - name: DEBUG
              value: "false"
            - name: LOGLEVEL
              value: "INFO"
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: docker-config
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
