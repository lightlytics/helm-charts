## Default values for Stream Security agent
## See Stream Security helm documentation:


nameOverride:  # ""

fullnameOverride:  # ""

registry: public.ecr.aws/k6v9y5g3

streamsec:
  #streamsec.apiToken --  Stream Security API token for your Kubernetes cluster
  #Required: Set your Stream Security API token here
  #ref :
  apiToken:

  # streamsec.apiTokenExistingSecret -- Use existing Secret which stores API key instead of creating a new one. The value should be set with the `api-key` key inside the secret.
  ## If set, this parameter takes precedence over "apiToken".
  apiTokenExistingSecret:  # <API_TOKEN_SECRET>

  #streamsec.apiUrl -- Stream Security site url
  #Required: Set your Stream Security API URL here
  apiUrl:

  #streamsec.fullScanScheduleSeconds -- periodic Kubernetes resources scan at seconds
  fullScanScheduleSeconds: 1800

  #streamsec.filterRunningPods -- takes only pods which at status running
  filterRunningPods: true

  #streamsec.fieldSelectorsNamespaces -- filter/unfilter resources from specific namespace
  fieldSelectorsNamespaces:

  #streamsec.fieldSelectorsNames
  fieldSelectorsNames:

  #streamsec.inLabelSelector
  inLabelSelector:

  #streamsec.dnsConfig
  dnsConfig: {}
    # options:
    # - name: ndots
    #   value: "2"
  
  #streamsec.tolerations
  tolerations:
  - key: "re"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

  #streamsec.existLabelSelector
  existLabelSelector:

  #streamsec.equalsLabelSelector
  equalsLabelSelector:
  
  #streamsec.workflow -- streamsec workflow type 
  workflow: full_scan
  
  #streamsec.port -- streamsec port
  port: 443

  replicas: 1

  image:
    #streamsec.image.name -- Stream Security agent image name.
    name: cluster-agent

    #streamsec.image.tag -- Stream Security agent tag to use.
    tag: master.577

    #streamsec.image.pullPolicy -- Stream Security agent image pullPolicy
    pullPolicy: IfNotPresent


  cost_image:
    #streamsec.cost_image.name -- Stream Security cost agent image name.
    name: cluster-agent

    #streamsec.cost_image.tag -- Stream Security cost agent tag to use.
    tag: cost_k8s_process.578

    #streamsec.cost_image.pullPolicy -- Stream Security cost agent image pullPolicy
    pullPolicy: IfNotPresent

  process_discovery_image:
    #streamsec.process_discovery_image.name -- Stream Security process discovery agent image name.
    name: process-agent

    #streamsec.process_discovery_image.tag -- Stream Security process discovery agent tag to use.
    tag: master.75

    #streamsec.process_discovery_image.pullPolicy -- Stream Security process discovery agent image pullPolicy
    pullPolicy: IfNotPresent

  serviceAccount:
    #streamsec.serviceAccount.create
    create: true

    #streamsec.serviceAccount.name -- The name of the Service account.
    #If not set and create is true, a name is generated using the fullname template
    name: ""

  clusterRole:
    #streamsec.clustRole.create
    create: true
    #streamsec.serviceAccount.name -- The name of the Service account.
    #If not set and create is true, a name is generated using the fullname template
    name: ""

  cost_containers:
    #streamsec.cost_containers.enabled
    enabled: true
    containers:
      connector:
        name: connector
        command:
          - /usr/local/bin/python
          - connector.py
        resources:
          requests:
            cpu: 800m
            memory: 1024Mi
          limits:
            cpu: 2000m
            memory: 2048Mi
      cost:
        name: cost
        command:
          - /usr/local/bin/python
          - cost.py
        resources:
          requests:
            cpu: 800m
            memory: 1024Mi
          limits:
            cpu: 2000m
            memory: 2048Mi

    
  cluster_agent_containers:
    enabled: true
    containers:
      krs:
        enabled: true
        name: krs
        command:
          - /usr/local/bin/python
          - main.py
          - krs
        resources:
          requests:
            cpu: 1000m
            memory: 2048Mi
          limits:
            cpu: 2000m
            memory: 4096Mi
      events:
        enabled: true
        name: events
        command:
          - /usr/local/bin/python
          - main.py
          - events
        requests:
          cpu: 800m
          memory: 1024Mi
        limits:
          cpu: 2000m
          memory: 2048Mi
      network-policy:
        enabled: false
        name: network-policy
        command:
          - /usr/local/bin/python
          - main.py
          - network_policy
        requests:
          cpu: 800m
          memory: 1024Mi
        limits:
          cpu: 2000m
          memory: 2048Mi

  process_discovery_containers:
    enabled: false
    containers:
      process-discovery:
        name: process-discovery
        requests:
          cpu: 800m
          memory: 1024Mi
        limits:
          cpu: 2000m
          memory: 2048Mi

  env:
    LOGLEVEL: INFO
    DEBUG: False


