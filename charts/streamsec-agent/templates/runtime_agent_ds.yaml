{{- if and (.Values.streamsec.cluster_agent_containers.enabled) (.Values.streamsec.runtime_agent.enabled) }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "streamsec.fullname" . }}-runtime-agent
  labels:
  {{- include "streamsec.labels" . | nindent 4 }}
  annotations:
    {{- if not .Values.streamsec.apiTokenExistingSecret }}
      checksum/api-token: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    {{- end }}
spec:
  selector:
    matchLabels:
  {{- include "streamsec.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
    {{- include "streamsec.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.streamsec.runtime_agent.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.streamsec.runtime_agent.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.streamsec.runtime_agent.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: runtime-agent
          image: {{ include "streamsec.runtime-agent-image-path" $ }}
          imagePullPolicy: {{ .Values.streamsec.runtime_agent.image.pullPolicy }}
          {{- with .Values.streamsec.runtime_agent.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: EVENTS_FILENAME
              value: {{ .Values.streamsec.runtime_agent.tetragonFilePath }}{{ .Values.streamsec.runtime_agent.tetragonFileName }}
            - name: API_URL
              value: {{ .Values.streamsec.apiUrl | quote }}
            - name: API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "streamsec.apiTokenSecretName" $ }}
                  key: api-key
            {{- if .Values.streamsec.env.CLUSTER_NAME }}
            - name: CLUSTER_NAME
              value: {{ .Values.streamsec.env.CLUSTER_NAME | quote }}
            {{- end }}
            {{- if .Values.streamsec.env.RESOURCE_GROUP }}
            - name: RESOURCE_GROUP
              value: {{ .Values.streamsec.env.RESOURCE_GROUP | quote }}
            {{- end }}
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/kernel
              name: sys-kernel
            - mountPath: {{ .Values.streamsec.runtime_agent.tetragonFilePath }}
              name: export-logs
            - mountPath: /host/proc
              name: proc
      dnsPolicy: {{ .Values.dnsPolicy }}
      hostNetwork: true
      hostPID: true
      hostIPC: true
      {{- with .Values.streamsec.runtime_agent.priorityClassName }}
      priorityClassName: "{{ . }}"
      {{- end }}
      serviceAccountName: {{ template "streamsec.serviceAccountName" . }}
      terminationGracePeriodSeconds: 1
      volumes:
        - hostPath:
            path: {{ .Values.streamsec.runtime_agent.tetragonFilePath }}
            type: DirectoryOrCreate
          name: export-logs
        - hostPath:
            path: /sys/kernel
            type: DirectoryOrCreate
          name: sys-kernel
        - hostPath:
            path: /proc
            type: DirectoryOrCreate
          name: proc
  {{- with .Values.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}